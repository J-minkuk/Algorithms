package com.jungol;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/*
5 5
0 2 2 5 9
2 0 3 4 8
2 3 0 7 6
5 4 7 0 5
9 5 6 5 0

28 4
0 11 24 66 60 5 70 5 23 3 28 3 79 5 82 16 27 68 55 12 47 67 15 10 32 59 89 83
65 0 3 75 86 97 92 79 14 35 24 16 92 78 97 42 71 7 69 58 14 71 91 54 93 77 72 28
34 43 0 84 80 81 8 62 2 17 78 75 32 34 49 85 49 60 40 94 83 57 74 17 55 94 28 15
83 89 5 0 51 87 99 73 87 34 40 27 49 86 71 52 42 31 5 81 68 53 16 41 54 61 96 74
4 97 80 54 0 72 69 81 51 64 49 4 55 29 52 9 69 12 35 76 20 42 11 71 63 5 15 16
13 9 37 48 78 0 76 11 8 33 98 29 8 23 51 73 57 83 46 30 63 64 18 68 42 16 63 4
68 39 52 36 88 52 0 90 6 74 69 27 69 59 17 32 38 70 5 44 60 47 59 38 19 74 91 28
74 19 10 97 32 97 73 0 12 19 45 54 70 78 89 89 74 16 24 54 15 61 31 69 90 54 37 5
45 27 7 9 14 85 75 97 0 36 100 49 73 82 45 74 15 57 57 41 21 17 36 40 60 95 54 16
99 30 2 39 55 74 20 57 64 0 72 40 48 44 11 47 49 67 6 33 40 27 59 72 71 33 80 88
53 83 84 96 44 95 16 96 74 32 0 70 55 44 47 86 83 28 49 55 95 43 31 52 76 21 18 24
74 13 41 71 73 25 71 70 24 96 41 0 60 65 8 96 17 79 20 66 55 3 78 75 72 28 14 54
4 42 40 13 67 73 69 45 85 31 60 1 0 72 33 78 70 89 81 88 71 31 62 30 77 68 28 11
82 2 19 63 10 1 6 62 2 42 34 95 25 0 35 41 5 19 15 40 64 28 21 24 67 80 100 68
13 53 34 89 78 98 85 64 28 88 69 16 1 75 0 71 16 46 45 57 91 56 35 27 88 50 12 22
44 47 81 15 14 38 48 78 99 15 51 68 18 36 93 0 86 29 44 86 15 64 70 17 39 46 17 23
72 78 30 35 49 36 7 62 38 44 31 99 51 69 30 97 0 68 26 79 75 17 9 95 57 33 53 43
38 89 42 5 61 18 98 58 23 42 66 72 41 63 25 54 26 0 52 92 16 96 37 55 42 8 13 59
66 42 59 9 6 82 98 86 46 19 100 63 86 22 28 74 40 71 0 59 13 91 30 68 64 36 36 95
66 4 39 48 92 14 59 95 52 22 10 15 63 51 7 60 9 20 55 0 25 78 29 72 29 26 88 61
72 56 39 41 2 42 41 3 76 92 11 59 78 27 87 63 8 100 1 96 0 72 1 70 65 99 31 63
60 47 66 87 53 92 80 79 32 85 24 21 50 42 50 99 58 52 2 90 99 0 61 26 26 54 85 91
35 42 3 64 9 52 55 65 60 20 8 53 94 27 42 44 45 79 46 2 8 8 0 25 32 50 24 82
48 1 53 14 23 44 93 77 46 15 30 67 8 69 60 84 71 28 48 75 21 4 34 0 68 53 5 53
13 2 43 93 62 79 43 93 13 27 52 38 17 24 9 8 96 74 8 52 75 33 71 77 0 21 3 19
79 48 87 7 9 67 83 78 9 83 75 51 10 68 98 11 81 2 12 28 64 97 64 33 91 0 18 12
29 68 88 60 5 94 73 55 72 56 40 40 22 26 43 27 65 4 40 50 69 42 98 38 19 80 0 25
2 90 23 9 24 82 99 83 17 38 71 89 90 7 70 56 24 39 47 27 72 5 39 25 87 99 89 0

 */
public class 정올_2097_지하철_DFS {
    static int min, N, M;
    static int[][] graph;
    static String result;
    static boolean[] visited;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] NM = br.readLine().split(" ");
        N = Integer.parseInt(NM[0]);    // 지하철 수
        M = Integer.parseInt(NM[1]);    // 목적지의 번호

        graph = new int[N + 1][N + 1];
        for (int i = 1; i < N + 1; ++i) {
            String[] s = br.readLine().split(" ");
            for (int j = 1; j < N + 1; ++j) {
                graph[i][j] = Integer.parseInt(s[j - 1]);
            }
        }

//        for (int i = 0; i < N + 1; ++i) {
//            System.out.println(Arrays.toString(graph[i]));
//        }

        min = Integer.MAX_VALUE;
        visited = new boolean[N + 1];
        dfs(1, 0, "1");
        System.out.println(min);
        System.out.println(result);
    }

    private static void dfs(int start, int distance, String s) {
        if (start == M) {
            if (min > distance) {
                min = distance;
                result = s;
            }
        }

        for (int i = 1; i < N + 1; ++i) {
            if (!visited[i] && graph[start][i] != 0 && min > distance + graph[start][i]) {
//                System.out.println(i);
                visited[i] = true;
                dfs(i, distance + graph[start][i], s + " " + i);
                visited[i] = false;
            }
        }
    }
}
